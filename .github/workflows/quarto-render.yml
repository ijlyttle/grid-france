# based on: 
#  - https://github.com/quarto-dev/quarto-actions/blob/main/examples/quarto-book-gh-pages.yaml
#  - https://github.com/actions/starter-workflows/blob/main/pages/static.yml

on:
  pull_request:
    branches: main
  schedule:
    # run each day at 03h15 UTC
    - cron: '15 3 * * *'
  # to be able to trigger a manual build
  workflow_dispatch:

name: Build and deploy Quarto site

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    env: 
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      RTE_FRANCE_BASE64: ${{ secrets.RTE_FRANCE_BASE64 }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11.2' 
          cache: 'pip'

      - name: Install Python deps
        run: pip install -r requirements.txt

      - name: Install Quarto
        uses: quarto-dev/quarto-actions/setup@v2

        # curious if this needed in context of DVC pipeline
      - name: Pull data
        run: |
          dvc pull

      - name: Run DVC pipeline
        run: dvc repro   
          
      - name: Render Quarto project
        uses: quarto-dev/quarto-actions/render@v2

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # hard-coding `_site` feels a little gross, but it works
          path: _site

      # if not pull-request, commit back to github    
      - name: Commit and push repo
        if: github.event_name != 'pull_request'
        run: |
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com
          git commit -am "Automated report"
          git push    

      # if not pull-request, push data to remote  
      - name: Push data
        if: github.event_name != 'pull_request'        
        run: dvc push

  deploy:
    if: github.event_name != 'pull_request'
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v3

      # note: before this action can run, must manually configure pages  
      - name: Setup pages
        uses: actions/configure-pages@v3
        
      - name: Deploy to GitHub pages
        id: deployment
        uses: actions/deploy-pages@v2